.multi-switch a,
.switch-lighter span span {
  display: none; }

/* We can't test for a specific feature,
 * so we only target browsers with support for media queries.
 */
@media only screen {
  /* Checkbox
 */
  .switch-lighter {
    position: relative;
    display: block;
    /* simulate default browser focus outlines on the switch,
   * when the inputs are focused.
   */ }
    .switch-lighter::after {
      clear: both;
      content: "";
      display: table; }
    .switch-lighter *,
    .switch-lighter *:before,
    .switch-lighter *:after {
      box-sizing: border-box; }
    .switch-lighter a {
      display: block;
      -webkit-transition: all 0.2s ease-out;
      -moz-transition: all 0.2s ease-out;
      transition: all 0.2s ease-out; }
    .switch-lighter label,
    .switch-lighter > span {
      /* breathing room for bootstrap/foundation classes.
     */
      line-height: 2em;
      vertical-align: middle; }
    .switch-lighter input:focus ~ span a,
    .switch-lighter input:focus + label {
      outline-width: 2px;
      outline-style: solid;
      outline-color: Highlight;
      /* Chrome/Opera gets its native focus styles.
     */ } }
    @media only screen and (-webkit-min-device-pixel-ratio: 0) {
      .switch-lighter input:focus ~ span a,
      .switch-lighter input:focus + label {
        outline-color: #fff;
        outline:0;
        outline-style: auto; } }

@media only screen {
  /* don't hide the input from screen-readers and keyboard access
 */
  .switch-lighter input {
    position: absolute;
    opacity: 0;
    z-index: 3; }
  .switch-lighter input:checked ~ span a {
    right: 0%; }
  /* inherit from label
 */
  .switch-lighter strong {
    font-weight: inherit; }
  .switch-lighter > span {
    position: relative;
    overflow: hidden;
    display: block;
    min-height: 2em;
    /* overwrite 3rd party classes padding
   * eg. bootstrap .well
   */
    padding: 0;
    text-align: left; }
  .switch-lighter span span {
    position: relative;
    z-index: 2;
    display: block;
    float: left;
    width: 50%;
    text-align: center;
    -webkit-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none; }
  .switch-lighter a {
    position: absolute;
    right: 50%;
    top: 0;
    z-index: 1;
    display: block;
    width: 50%;
    height: 100%;
    padding: 0; }
  /* Radio Switch
 */
  .multi-switch {
    position: relative;
    display: block;
    /* simulate default browser focus outlines on the switch,
   * when the inputs are focused.
   */
    /* For callout panels in foundation
  */
    padding: 0 !important;
    /* 2 items
   */
    /* 3 items
   */
    /* 4 items
   */
    /* 5 items
   */
    /* 6 items
   */ }
    .multi-switch::after {
      clear: both;
      content: "";
      display: table; }
    .multi-switch *,
    .multi-switch *:before,
    .multi-switch *:after {
      box-sizing: border-box; }
    .multi-switch a {
      display: block;
      -webkit-transition: all 0.2s ease-out;
      -moz-transition: all 0.2s ease-out;
      transition: all 0.2s ease-out; }
    .multi-switch label,
    .multi-switch > span {
      /* breathing room for bootstrap/foundation classes.
     */
      line-height: 2em;
      vertical-align: middle; }
    .multi-switch input:focus ~ span a,
    .multi-switch input:focus + label {
      outline-width: 2px;
      outline-style: solid;
      outline-color: Highlight;
      /* Chrome/Opera gets its native focus styles.
     */ } }
    @media only screen and (-webkit-min-device-pixel-ratio: 0) {
      .multi-switch input:focus ~ span a,
      .multi-switch input:focus + label {
        outline-color: #fff;
        outline:0;
        outline-style: auto; } }

@media only screen {
    .multi-switch input {
      position: absolute;
      left: 0;
      opacity: 0; }
    .multi-switch input + label {
      position: relative;
      z-index: 2;
      display: block;
      float: left;
      padding: 0 8px;
      margin: 0;
      text-align: center; }
    .multi-switch a {
      position: absolute;
      top: 0;
      left: 0;
      padding: 0;
      z-index: 1;
      width: 10px;
      height: 100%; }
    .multi-switch label:nth-child(2):nth-last-child(4),
    .multi-switch label:nth-child(2):nth-last-child(4) ~ label,
    .multi-switch label:nth-child(2):nth-last-child(4) ~ a {
      width: 50%; }
    .multi-switch label:nth-child(2):nth-last-child(4) ~ input:checked:nth-child(3) + label ~ a {
      left: 50%; }
    .multi-switch label:nth-child(2):nth-last-child(6),
    .multi-switch label:nth-child(2):nth-last-child(6) ~ label,
    .multi-switch label:nth-child(2):nth-last-child(6) ~ a {
      width: 33.33%; }
    .multi-switch label:nth-child(2):nth-last-child(6) ~ input:checked:nth-child(3) + label ~ a {
      left: 33.33%; }
    .multi-switch label:nth-child(2):nth-last-child(6) ~ input:checked:nth-child(5) + label ~ a {
      left: 66.66%; }
    .multi-switch label:nth-child(2):nth-last-child(8),
    .multi-switch label:nth-child(2):nth-last-child(8) ~ label,
    .multi-switch label:nth-child(2):nth-last-child(8) ~ a {
      width: 25%; }
    .multi-switch label:nth-child(2):nth-last-child(8) ~ input:checked:nth-child(3) + label ~ a {
      left: 25%; }
    .multi-switch label:nth-child(2):nth-last-child(8) ~ input:checked:nth-child(5) + label ~ a {
      left: 50%; }
    .multi-switch label:nth-child(2):nth-last-child(8) ~ input:checked:nth-child(7) + label ~ a {
      left: 75%; }
    .multi-switch label:nth-child(2):nth-last-child(10),
    .multi-switch label:nth-child(2):nth-last-child(10) ~ label,
    .multi-switch label:nth-child(2):nth-last-child(10) ~ a {
      width: 20%; }
    .multi-switch label:nth-child(2):nth-last-child(10) ~ input:checked:nth-child(3) + label ~ a {
      left: 20%; }
    .multi-switch label:nth-child(2):nth-last-child(10) ~ input:checked:nth-child(5) + label ~ a {
      left: 40%; }
    .multi-switch label:nth-child(2):nth-last-child(10) ~ input:checked:nth-child(7) + label ~ a {
      left: 60%; }
    .multi-switch label:nth-child(2):nth-last-child(10) ~ input:checked:nth-child(9) + label ~ a {
      left: 80%; }
    .multi-switch label:nth-child(2):nth-last-child(12),
    .multi-switch label:nth-child(2):nth-last-child(12) ~ label,
    .multi-switch label:nth-child(2):nth-last-child(12) ~ a {
      width: 16.6%; }
    .multi-switch label:nth-child(2):nth-last-child(12) ~ input:checked:nth-child(3) + label ~ a {
      left: 16.6%; }
    .multi-switch label:nth-child(2):nth-last-child(12) ~ input:checked:nth-child(5) + label ~ a {
      left: 33.2%; }
    .multi-switch label:nth-child(2):nth-last-child(12) ~ input:checked:nth-child(7) + label ~ a {
      left: 49.8%; }
    .multi-switch label:nth-child(2):nth-last-child(12) ~ input:checked:nth-child(9) + label ~ a {
      left: 66.4%; }
    .multi-switch label:nth-child(2):nth-last-child(12) ~ input:checked:nth-child(11) + label ~ a {
      left: 83%; }
  /* Candy Theme
 * Based on the "Sort Switches / Toggles (PSD)" by Ormal Clarck
 * http://www.premiumpixels.com/freebies/sort-switches-toggles-psd/
 */
  .multi-switch.switch-candy,
  .switch-lighter.switch-candy > span {
    background-color: #2d3035;
    border-radius: 3px;
    box-shadow: inset 0 2px 6px rgba(0, 0, 0, 0.3), 0 1px 0 rgba(255, 255, 255, 0.2); }
  .switch-lighter.switch-candy span span,
  .switch-lighter.switch-candy input:checked ~ span span:first-child,
  .multi-switch.switch-candy label {
    color: #fff;
    font-weight: bold;
    text-align: center;
    text-shadow: 1px 1px 1px #191b1e; }
  .switch-lighter.switch-candy input ~ span span:first-child,
  .switch-lighter.switch-candy input:checked ~ span span:nth-child(2),
  .switch-candy input:checked + label {
    color: #333;
    text-shadow: 0 1px 0 rgba(255, 255, 255, 0.5); }
  .switch-candy a {
    border: 1px solid #333;
    border-radius: 3px;
    box-shadow: 0 1px 1px rgba(0, 0, 0, 0.2), inset 0 1px 1px rgba(255, 255, 255, 0.45);
    background-color: #70c66b;
    background-image: -webkit-linear-gradient(top, rgba(255, 255, 255, 0.2), transparent);
    background-image: linear-gradient(to bottom, rgba(255, 255, 255, 0.2), transparent); }
  .switch-candy-blue a {
    background-color: #38a3d4; }
  .switch-candy-yellow a {
    background-color: #f5e560; }
  /* iOS Theme
*/
  .switch-ios2.switch-lighter span span {
    color: #888b92; }
  .switch-ios2.switch-lighter a {
    left: 0;
    top: 0;
    width: 32px;
    height: 32px;
    background-color: #fff;
    border-radius: 100%;
    border: 4px solid rgba(255, 255, 255, 0.89);
    -webkit-transition: all 0.2s ease-out;
    -moz-transition: all 0.2s ease-out;
    transition: all 0.2s ease-out; }
  .switch-ios2.switch-lighter > span {
    display: block;
    width: 100%;
    height: 32px;
    background-color: rgba(255, 255, 255, 0.89);
    border-radius: 28px;
    -webkit-transition: all 0.4s ease-out;
    -moz-transition: all 0.4s ease-out;
    transition: all 0.4s ease-out; }
  .switch-ios2.switch-lighter > span span {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    opacity: 0;
    line-height: 30px;
    vertical-align: middle;
    -webkit-transition: all 0.2s ease-out;
    -moz-transition: all 0.2s ease-out;
    transition: all 0.2s ease-out; }
    .switch-ios2.switch-lighter > span span:first-of-type {
      opacity: 1;
      padding-left: 30px; }
    .switch-ios2.switch-lighter > span span:last-of-type {
      padding-right: 30px; }
  .switch-ios2.switch-lighter input:checked ~ span a {
    left: 100%;
    border-color: #8F73C6;
    margin-left: -32px; }
  .switch-ios2.switch-lighter input:checked ~ span {
    border-color: #8F73C6;
    box-shadow: inset 0 0 0 30px #8F73C6; }
  .switch-ios2.switch-lighter input:checked ~ span span:first-of-type {
    opacity: 0; }
  .switch-ios2.switch-lighter input:checked ~ span span:last-of-type {
    opacity: 1;
    color: #fff; }
  .switch-ios2.multi-switch {
    background-color: rgba(255, 255, 255, 0.89);
    border-radius: 30px;
    border: solid 1px rgba(80, 80, 80, 0.27);
    box-shadow: inset rgba(0, 0, 0, 0) 0 1px 0; }
    .switch-ios2.multi-switch a {
      background-color: #8F73C6;
      border: 2px solid rgba(255, 255, 255, 0.89);
      border-radius: 28px;
      -webkit-transition: all 0.12s ease-out;
      -moz-transition: all 0.12s ease-out;
      transition: all 0.12s ease-out; }
    .switch-ios2.multi-switch label {
      font-size: 14px;
      cursor: pointer;
      height: 2.4em;
      color: #888b92;
      line-height: 2.4em;
      vertical-align: middle; }
  .switch-ios2 input:checked + label {
    color: #fff; }
    .switch-ios2 label.checked {
    color: #fff; }
  /* Holo Theme
 */
  .multi-switch.switch-holo,
  .switch-lighter.switch-holo > span {
    background-color: #464747;
    border-radius: 1px;
    box-shadow: inset rgba(0, 0, 0, 0.1) 0 1px 0;
    color: #fff;
    text-transform: uppercase; }
  .switch-holo label {
    color: #fff; }
  .switch-holo > span span {
    opacity: 0;
    -webkit-transition: all 0.1s;
    -moz-transition: all 0.1s;
    transition: all 0.1s; }
    .switch-holo > span span:first-of-type {
      opacity: 1; }
  .switch-holo > span span,
  .switch-holo label {
    font-size: 85%;
    line-height: 34.5px; }
  .switch-holo a {
    background-color: #666;
    border-radius: 1px;
    box-shadow: inset rgba(255, 255, 255, 0.2) 0 1px 0, inset rgba(0, 0, 0, 0.3) 0 -1px 0; }
  /* Selected ON switch-lighter
*/
  .switch-holo.switch-lighter input:checked ~ span a {
    background-color: #0E88B1; }
  .switch-holo.switch-lighter input:checked ~ span span:first-of-type {
    opacity: 0; }
  .switch-holo.switch-lighter input:checked ~ span span:last-of-type {
    opacity: 1; }
  /* Material Theme
 */
  /* switch-lighter
 */
  .switch-lighter.switch-material a {
    top: -3px;
    width: 28px;
    height: 28px;
    border-radius: 50%;
    background: #fafafa;
    box-shadow: 0 2px 2px 0 rgba(0, 0, 0, 0.14), 0 3px 2px -2px rgba(0, 0, 0, 0.2), 0 2px 4px 0 rgba(0, 0, 0, 0.12);
    -webkit-transition: right 0.28s cubic-bezier(0.4, 0, 0.2, 1);
    -moz-transition: right 0.28s cubic-bezier(0.4, 0, 0.2, 1);
    transition: right 0.28s cubic-bezier(0.4, 0, 0.2, 1); }
  .switch-material.switch-lighter {
    overflow: visible; }
    .switch-material.switch-lighter::after {
      clear: both;
      content: "";
      display: table; }
  .switch-material.switch-lighter > span {
    overflow: visible;
    position: relative;
    top: 3px;
    width: 52px;
    height: 24px;
    min-height: auto;
    border-radius: 16px;
    background: rgba(0, 0, 0, 0.26); }
  .switch-material.switch-lighter span span {
    position: absolute;
    clip: rect(0 0 0 0); }
  .switch-material.switch-lighter input:checked ~ span a {
    right: 0;
    background: #3f51b5;
    box-shadow: 0 3px 4px 0 rgba(0, 0, 0, 0.14), 0 3px 3px -2px rgba(0, 0, 0, 0.2), 0 1px 6px 0 rgba(0, 0, 0, 0.12); }
  .switch-material.switch-lighter input:checked ~ span {
    background: rgba(63, 81, 181, 0.5); }
  /* multi-switch
 */
  .multi-switch.switch-material {
    overflow: visible; }
    .multi-switch.switch-material::after {
      clear: both;
      content: "";
      display: table; }
  .multi-switch.switch-material a {
    top: 48%;
    width: 6px !important;
    height: 6px;
    margin-left: 4px;
    background: #3f51b5;
    border-radius: 100%;
    -webkit-transform: translateY(-50%);
    -moz-transform: translateY(-50%);
    -ms-transform: translateY(-50%);
    -o-transform: translateY(-50%);
    transform: translateY(-50%);
    -webkit-transition: -webkit-transform;
    -moz-transition: -moz-transform;
    transition: transform; }
  .multi-switch.switch-material label {
    color: rgba(0, 0, 0, 0.54);
    font-size: 1em; }
  .multi-switch.switch-material label:before {
    content: '';
    position: absolute;
    top: 48%;
    left: 0;
    display: block;
    width: 14px;
    height: 14px;
    border-radius: 100%;
    border: 2px solid rgba(0, 0, 0, 0.54);
    -webkit-transform: translateY(-50%);
    -moz-transform: translateY(-50%);
    -ms-transform: translateY(-50%);
    -o-transform: translateY(-50%);
    transform: translateY(-50%); }
  .multi-switch.switch-material input:checked + label:before {
    border-color: #3f51b5; }
  /* ripple
 */
  .switch-lighter.switch-material > span:before,
  .switch-lighter.switch-material > span:after,
  .multi-switch.switch-material label:after {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    z-index: 3;
    display: block;
    width: 64px;
    height: 64px;
    border-radius: 100%;
    background: #3f51b5;
    opacity: .4;
    margin-left: -20px;
    margin-top: -20px;
    -webkit-transform: scale(0);
    -moz-transform: scale(0);
    -ms-transform: scale(0);
    -o-transform: scale(0);
    transform: scale(0);
    -webkit-transition: opacity 0.4s ease-in;
    -moz-transition: opacity 0.4s ease-in;
    transition: opacity 0.4s ease-in; }
  .switch-lighter.switch-material > span:after {
    left: auto;
    right: 0;
    margin-left: 0;
    margin-right: -20px; }
  .multi-switch.switch-material label:after {
    width: 52px;
    height: 52px;
    margin-top: -12px; }
  @-webkit-keyframes materialRipple {
    0% {
      -webkit-transform: scale(0); }
    20% {
      -webkit-transform: scale(1); }
    100% {
      opacity: 0;
      -webkit-transform: scale(1); } }
  @-moz-keyframes materialRipple {
    0% {
      -moz-transform: scale(0); }
    20% {
      -moz-transform: scale(1); }
    100% {
      opacity: 0;
      -moz-transform: scale(1); } }
  @keyframes materialRipple {
    0% {
      -webkit-transform: scale(0);
      -moz-transform: scale(0);
      -ms-transform: scale(0);
      -o-transform: scale(0);
      transform: scale(0); }
    20% {
      -webkit-transform: scale(1);
      -moz-transform: scale(1);
      -ms-transform: scale(1);
      -o-transform: scale(1);
      transform: scale(1); }
    100% {
      opacity: 0;
      -webkit-transform: scale(1);
      -moz-transform: scale(1);
      -ms-transform: scale(1);
      -o-transform: scale(1);
      transform: scale(1); } }
  .switch-material.switch-lighter input:not(:checked) ~ span:after,
  .switch-material.switch-lighter input:checked ~ span:before,
  .multi-switch.switch-material input:checked + label:after {
    -webkit-animation: materialRipple 0.4s ease-in;
    -moz-animation: materialRipple 0.4s ease-in;
    animation: materialRipple 0.4s ease-in; }
  /* trick to prevent the default checked ripple animation from showing
 * when the page loads.
 * the ripples are hidden by default, and shown only when the input is focused.
 */
  .switch-lighter.switch-material.switch-lighter input ~ span:before,
  .switch-lighter.switch-material.switch-lighter input ~ span:after,
  .switch-material.multi-switch input + label:after {
    visibility: hidden; }
  .switch-lighter.switch-material.switch-lighter input:focus:checked ~ span:before,
  .switch-lighter.switch-material.switch-lighter input:focus:not(:checked) ~ span:after,
  .switch-material.multi-switch input:focus:checked + label:after {
    visibility: visible; } }

/* Bugfix for older Webkit, including mobile Webkit. Adapted from
 * http://css-tricks.com/webkit-sibling-bug/
 */
@media only screen and (-webkit-max-device-pixel-ratio: 2) and (max-device-width: 1280px) {
  .switch-lighter,
  .multi-switch {
    -webkit-animation: webkitSiblingBugfix infinite 1s; } }

@-webkit-keyframes webkitSiblingBugfix {
  from {
    -webkit-transform: translate3d(0, 0, 0); }
  to {
    -webkit-transform: translate3d(0, 0, 0); } }